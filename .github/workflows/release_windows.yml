name: Release Windows

on:
  push: 
    paths: 
      - .github/workflows/release_windows.yml

jobs:
  test_build_windows:
    if: github.ref_name == 'release_windows'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build Windows
        run: |
          New-Item -Path .\ -Name fake4.file -ItemType File -Force
          git config --global user.email "faithnomoread@yahoo.com"
          git config --global user.name ${{ github.actor }}
          git add .\fake*.file
          git commit -m 'Fake test merge and push'
          git push origin ${{ github.ref_name }}
          git fetch
          git checkout master
          git merge release_windows
          git checkout develop
          git merge release_windows
          git checkout master
          git merge release_linux
# git push origin ${{ github.actor }}:master
# git push origin ${{ github.actor }}:release_linux
# git push origin ${{ github.actor }}:develop
# Write-Output "${{ github.ref_name }}"
# New-Item -Path .\ -Name fake.file -ItemType File -Force
# - uses: actions/checkout@v3
# - uses: everlytic/branch-merge@1.1.2
#   with:
#     github_token: ${{ github.token }}
#     source_ref: ${{ github.ref }}
#     target_branch: 'master'
#     commit_message_template: '[Automated] Merged {source_ref} into target {target_branch}'
# git config --global user.email "faithnomoread@yahoo.com"
# git config --global user.name "Lateralus138"
# git add .\fake.file
# git commit -m 'Fake test merge and push'
# git push origin ${{ github.ref_name }}
# git switch master
# git merge release_windows
# git add .\fake.file
# git commit -m 'Fake test merge and push'
# git push origin master
# cd Windows || Exit $LASTEXITCODE
# .\pyenv_nuitka_setup.ps1 || Exit $LASTEXITCODE
# .\nuitka_compile.ps1 || Exit $LASTEXITCODE
# Get-ChildItem
# release_windows:
#   runs-on: windows-latest
#   if: ${{ contains(join(needs.*.result, ','), 'success') }}
#   needs: [test_build_windows]
#   steps:
#     - uses: actions/checkout@v3
#     - name: Test Windows Build For Release
#       run: |
#         Get-ChildItem -Path Windows
